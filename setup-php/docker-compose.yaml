services:
  server:
    image: 'nginx:stable-alpine'
    ports:
      - '8000:80'
    volumes:
      - ./src:/var/www/html 
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      
  php:
    build: 
      context: ./dockerfiles
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated #use delegated to improve performance

  mysql:
    image: 'mysql:5.7'
    env_file:
      - ./env/mysql.env

  composer:
    build: 
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html
	    #chúng ta có thể set một số thứ trong Dockerfile bên trong file docker compose
	    #lí do tại sao ta không viết trong dockerfile là vì có thể có nhiều service sử dụng chung một image nhưng có một số command ta chỉ muôn sử dụng ở các service nhất định nên ta phải viêt command trong service

  npm:
    image: node:14
  	#demo viết thay vì viết các instruction trong dockerfile ta viết ở dockercompose
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html





#khi sử dụng docker compose khi ta thay đổi Dockerfile thì khi docker compose up thì sẽ không thay đổi 
#vì khi docker compose up, nó kiểm tra và thấy image có sẵn nên nó sẽ không build lại mà sử dụng image đó
#vì vậy khi Dockerfile thay đổi và ta muốn force docker build lại image thì ta phải thên flag --build VD docker compose up --build 

#LƯU Ý
#file này dùng để cho biết các câu lệnh dùng để làm gì thôi chứ không build được 